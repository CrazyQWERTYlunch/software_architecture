Unit и UAT test-ы


E2E - тестирование.
Проводим после завершения работы над кодом.        Тестируем каждую систему на работоспособность. При этом воздействуем на систему через ее самые внешние интерфейсы и проверяем ожидаемую реакцию системы через эти же интерфейсы.


N
п/п
	Вызываемый метод
	Ожидаемый результат
	1.
	.get_sup()
	Метод извлекает из базы данных сведения о всех имеющихся сапбордах и возвращает данные о них
	2.
	.get_route()
	Метод извлекает из базы данных сведения о всех имеющихся маршрутах и возвращает данные о них
	3.
	.delete_sup()
	Метод удаляет указанный сапборд из базы данных и вовзращает флаг выполнения операции
	4.
	.add_sup()
	Метод добавляет указанный сапборд в базу данных и вовзращает флаг выполнения операции
	5.
	.creating_an_application()
	При выборе  маршрута/аренды формируется заявка в которую добавляется выбранная позиция.
Позиция добавляется в заявку. Количество позиций в заявке увеличивается на 1.
На основе заявленных позиций формируется итоговая стоимость заказа.
	6.
	.deleting_a_position()
	Позиция удалена из заявки. 
Количество позиций уменьшается на 1.
Итоговая стоимость заказа перерасчитывается.
	7. 
	making_in_order()
	Запрашиваются контактные данные пользователя. Данные пользователя вносятся в базу данных. 
	8. 
	payment_by_card()
	Запрашиваются данные карты пользователя. Данные вносятся в базу данных. Формируется запрос на снятие с карты денежных средств.
	









UAT - тестирование. Готовый программный продукт тестирует ограниченный круг пользователей. Тестируется каждый кейс из User case диаграммы. При этом группа людей изучает эффективность сервиса, его функционала. UAT нужен для того, чтобы понять:
* как ведет себя продукт в реальных условиях, соответствует ли результат задумке;
* выявить, были ли добавлены все возможные функции;
* проверить, есть ли ошибки, которые будут мешать пользователю.


Use сase
	Действие
	Ожидаемый результат
	Соответствие
	Просмотреть маршруты
	Вывести полный ассортимент имеющихся маршрутов прогулок
	Выводит на экран  полный ассортимент имеющихся 
маршрутов прогулок
	

	Посмотреть сапы
	Вывести полный ассортимент имеющихся сапов
	Выводит полный ассортимент имеющихся сапов
	

	Записаться на прогулку
	Добавление выбранного маршрута в заявку для последующего оформления заказа
	Выбранный вариант появляется в заявке. Стоимость рассчитана корректно
	

	Взять сап в аренду
	Добавление выбранного сапа в заявку для последующего оформления заказа
	Выбранный вариант появляется в заявке. Стоимость рассчитана корректно
	

	Редактирование количества позиций в заявке
	Пользователь увеличивает или уменьшает количество позиций или участников в заявке
	Итоговая стоимость заявки пересчитывается с учетом изменений
	

	Оформление заказа
	Пользователь завершает оформление заявки и подтверждает заказ
	Все контактные данные пользователя заполнены верно и внесены в базу данных. Заказ создан и передан сотрудникам.
	

	Выбор способа оплаты
	Пользователь выбирает способ оплаты заказа (наличные, предоплата по карте, оплата по карте на месте)
	Информация о карте принята и обработана корректно. Сформирован запрос на снятие денежных средств с карты пользователя в размере итоговой стоимости заказа